project(SFSL)
cmake_minimum_required(VERSION 2.8)

include_directories(./src/)

aux_source_directory(./src/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Common/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Lexer/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Lexer/Tokens/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Parser/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/AST/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/AST/Nodes/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/AST/Visitors/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Analyser/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Symbols/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Types/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Frontend/Kinds/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Backend/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Backend/CodeGen/ COMPILER_SRC_LIST)
aux_source_directory(./src/Compiler/Backend/Bytecode COMPILER_SRC_LIST)
aux_source_directory(./src/Utils/ COMPILER_SRC_LIST)

add_executable(${PROJECT_NAME} ${COMPILER_SRC_LIST})

set(CMAKE_BUILD_TYPE "debug")

set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-long-long")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
